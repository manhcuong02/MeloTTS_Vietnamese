# punctuation = ["!", "?", "…", ",", ".", "'", "-"]
punctuation = ["!", "?", "…", ",", ".", "'", "-", "¿", "¡"]
pu_symbols = punctuation + ["SP", "UNK"]
pad = "_"

# reference: https://myshell-public-repo-host.s3.amazonaws.com/openvoice/basespeakers/EN/config.json
symbols = [
    "_",
    "\"",
    "(",
    ")",
    "*",
    "/",
    ":",
    "AA",
    "E",
    "EE",
    "En",
    "N",
    "OO",
    "Q",
    "V",
    "[",
    "\\",
    "]",
    "^",
    "a",
    "a:",
    "aa",
    "ae",
    "ah",
    "ai",
    "an",
    "ang",
    "ao",
    "aw",
    "ay",
    "b",
    "by",
    "c",
    "ch",
    "d",
    "dh",
    "dy",
    "e",
    "e:",
    "eh",
    "ei",
    "en",
    "eng",
    "er",
    "ey",
    "f",
    "g",
    "gy",
    "h",
    "hh",
    "hy",
    "i",
    "i0",
    "i:",
    "ia",
    "ian",
    "iang",
    "iao",
    "ie",
    "ih",
    "in",
    "ing",
    "iong",
    "ir",
    "iu",
    "iy",
    "j",
    "jh",
    "k",
    "ky",
    "l",
    "m",
    "my",
    "n",
    "ng",
    "ny",
    "o",
    "o:",
    "ong",
    "ou",
    "ow",
    "oy",
    "p",
    "py",
    "q",
    "r",
    "ry",
    "s",
    "sh",
    "t",
    "th",
    "ts",
    "ty",
    "u",
    "u:",
    "ua",
    "uai",
    "uan",
    "uang",
    "uh",
    "ui",
    "un",
    "uo",
    "uw",
    "v",
    "van",
    "ve",
    "vn",
    "w",
    "x",
    "y",
    "z",
    "zh",
    "zy",
    "~",
    "¡",
    "¿",
    "æ",
    "ç",
    "ð",
    "ø",
    "ŋ",
    "œ",
    "ɐ",
    "ɑ",
    "ɒ",
    "ɔ",
    "ɕ",
    "ə",
    "ɛ",
    "ɜ",
    "ɡ",
    "ɣ",
    "ɥ",
    "ɦ",
    "ɪ",
    "ɫ",
    "ɬ",
    "ɭ",
    "ɯ",
    "ɲ",
    "ɵ",
    "ɸ",
    "ɹ",
    "ɾ",
    "ʁ",
    "ʃ",
    "ʊ",
    "ʌ",
    "ʎ",
    "ʏ",
    "ʑ",
    "ʒ",
    "ʝ",
    "ʲ",
    "ˈ",
    "ˌ",
    "ː",
    "̃",
    "̩",
    "β",
    "θ",
    "ᄀ",
    # replace korean symbols to vietnamese symbols
    "k͡p",
    "ˈa",
    "ɤ",
    "ˈɛ",
    "ˈi",
    "ă",
    "ˈe",
    "ʔ",
    "ŋ͡m",
    "tʰ",
    "ɤ̆",
    # end of replacements
    "ᄌ",
    "ᄍ",
    "ᄎ",
    "ᄏ",
    "ᄐ",
    "ᄑ",
    "ᄒ",
    "ᅡ",
    "ᅢ",
    "ᅣ",
    "ᅤ",
    "ᅥ",
    "ᅦ",
    "ᅧ",
    "ᅨ",
    "ᅩ",
    "ᅪ",
    "ᅫ",
    "ᅬ",
    "ᅭ",
    "ᅮ",
    "ᅯ",
    "ᅰ",
    "ᅱ",
    "ᅲ",
    "ᅳ",
    "ᅴ",
    "ᅵ",
    "ᆨ",
    "ᆫ",
    "ᆮ",
    "ᆯ",
    "ᆷ",
    "ᆸ",
    "ᆼ",
    "ㄸ",
    "!",
    "?",
    "…",
    ",",
    ".",
    "'",
    "-",
    "SP",
    "UNK"
]

# vietnamese
vi_symbols = [
    "ʃ",
    "k͡p",
    "ŋ",
    "n",
    "ˈa",
    "ɤ",
    "ˈɛ",
    "w",
    "d",
    "k",
    "ˈi",
    "ɣ",
    "l",
    "o",
    "v",
    "ɡ",
    "a",
    "p",
    "ɯ",
    "b",
    "u",
    "z",
    "ɲ",
    "ă",
    "f",
    "t",
    "ˈe",
    "ɛ",
    "x",
    "ɔ",
    "i",
    "c",
    "r",
    "ʔ",
    "m",
    "ŋ͡m",
    "h",
    "tʰ",
    "j",
    "ə",
    "ɤ̆",
    "e",
    "s",
]
num_vi_tones = 8

num_zh_tones = 6

num_ja_tones = 1

num_en_tones = 4

num_kr_tones = 1

num_es_tones = 1

num_fr_tones = 1

num_de_tones = 1

num_ru_tones = 1

# combine all symbols
sil_phonemes_ids = [symbols.index(i) for i in pu_symbols]

# combine all tones
num_tones = (
    num_zh_tones
    + num_ja_tones
    + num_en_tones
    + num_kr_tones
    + num_es_tones
    + num_fr_tones
    + num_de_tones
    + num_ru_tones
    + num_vi_tones
)

# language maps
language_id_map = {
    "ZH": 0,
    "JP": 1,
    "EN": 2,
    "ZH_MIX_EN": 3,
    "KR": 4,
    "ES": 5,
    "SP": 5,
    "FR": 6,
    "VI": 7,
}
num_languages = len(language_id_map.keys())

language_tone_start_map = {
    "ZH": 0,
    "ZH_MIX_EN": 0,
    "JP": num_zh_tones,
    "EN": num_zh_tones + num_ja_tones,
    "KR": num_zh_tones + num_ja_tones + num_en_tones,
    "ES": num_zh_tones + num_ja_tones + num_en_tones + num_kr_tones,
    "SP": num_zh_tones + num_ja_tones + num_en_tones + num_kr_tones,
    "FR": num_zh_tones + num_ja_tones + num_en_tones + num_kr_tones + num_es_tones,
    "VI": num_zh_tones + num_ja_tones + num_en_tones + num_kr_tones + num_es_tones + num_fr_tones,
}

if __name__ == "__main__":
    print(num_languages, len(symbols), num_tones)
    for symbol in vi_symbols:
        if symbol not in symbols:
            print(symbol)
